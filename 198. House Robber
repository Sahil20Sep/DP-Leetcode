class Solution {
public:

    int func(int i, vector<int> &v, vector<int> &dp){
        if(i < 0){
            return 0;
        }
        if(dp[i] != -1){
            return dp[i];
        }
        int ans = INT_MIN;
        ans = max(ans, func(i - 1, v, dp));
        ans = max(ans, func(i - 2, v, dp) + v[i]);
        return dp[i] = ans;
    }

    int rob(vector<int>& v) {
        int n = v.size();
        vector<int> dp(n, -1);
        return func(n - 1, v, dp);
    }
};

----------------------------------------------------------

int rob(vector<int>& v) {
        int n = v.size();
        if(n == 1){
            return v[0];
        }
        vector<int> dp(n, 0);
        // return func(n - 1, v, dp);
        dp[0] = v[0], dp[1] = max(v[0], v[1]);
        for(int i = 2; i < n; i++){
            int ans = INT_MIN;
            ans = max(ans, dp[i - 1]);
            ans = max(ans, dp[i - 2] + v[i]);
            dp[i] = ans;
        }
        return dp[n - 1];
    }
