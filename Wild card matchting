class Solution {
public:

    int func(int i, int j, string &s, string &t, vector<vector<int>> &dp){
        if(j < 0){
            for(int k = 0; k <= i; k++){
                if(s[k] != '*'){
                    return false;
                }
            }
            return true;
        }
        if(i < 0){
            return false;
        }
        if(dp[i][j] != -1){
            return dp[i][j];
        }
        if(s[i] == t[j] || s[i] == '?'){
            return dp[i][j] = func(i - 1, j - 1, s, t, dp);
        }
        if(s[i] == '*'){
            return dp[i][j] = func(i - 1, j, s, t, dp) || func(i, j - 1, s, t, dp);
        }
        return dp[i][j] = false;
    }

    bool isMatch(string t, string s) {
        int n = s.size(), m = t.size();
        vector<vector<int>> dp(n, vector<int> (m, -1));
        return func(n - 1, m - 1, s, t, dp);
    }
};

----------------------------------------------------------------------------------------------------

bool isMatch(string t, string s) {
        int n = s.size(), m = t.size();
        vector<vector<bool>> dp(n + 1, vector<bool> (m + 1, false));
        // return func(n - 1, m - 1, s, t, dp);
        dp[0][0] = true;
        vector<int> store(n + 1, 0);
        for(int i = 1; i <= n; i++){
            if(s[i - 1] == '*'){
                store[i] = store[i - 1] + 1;
            }else{
                store[i] = store[i - 1];
            }
        }
        for(int i = 1; i <= n; i++){
            if(store[i] == i){
                dp[i][0] = true;
            }else{
                break;
            }
        }
        for(int i = 1; i <= n; i++){
            for(int j = 1; j <= m; j++){
                if(s[i - 1] == t[j - 1] || s[i - 1] == '?'){
                    dp[i][j] = dp[i - 1][j - 1];
                }
                if(s[i - 1] == '*'){
                    dp[i][j] = dp[i - 1][j] || dp[i][j - 1];
                }
            }
        }
        return dp[n][m];
    }
    
    --------------------------------------------------------------------------------------------
    
    bool isMatch(string t, string s) {
        int n = s.size(), m = t.size();
        vector<bool> prev(m + 1, false), temp(m + 1, false);
        // return func(n - 1, m - 1, s, t, dp);
        prev[0] = true;
        vector<int> store(n + 1, 0);
        for(int i = 1; i <= n; i++){
            if(s[i - 1] == '*'){
                store[i] = store[i - 1] + 1;
            }else{
                store[i] = store[i - 1];
            }
        }
        for(int i = 1; i <= n; i++){
            if(store[i] == i){
                temp[0] = true;
            }else{
                temp[0] = false;
            }
            for(int j = 1; j <= m; j++){
                if(s[i - 1] == t[j - 1] || s[i - 1] == '?'){
                    temp[j] = prev[j - 1];
                }
                else if(s[i - 1] == '*'){
                    temp[j] = prev[j] || temp[j - 1];
                }
                else{
                    temp[j] = false;
                }
            }
            prev = temp;
        }
        return prev[m];
    }
