class Solution {
public:

    int func(int i, int j, vector<vector<int>> &t, vector<vector<int>> &dp, int n){
        if(i == n){
            return 0;
        }
        if(dp[i][j] != -1){
            return dp[i][j];
        }
        int ans = INT_MAX;
        ans = min(ans, func(i + 1, j, t, dp, n) + t[i][j]);
        ans = min(ans, func(i + 1, j + 1, t, dp, n) + t[i][j]);
        return dp[i][j] = ans;
    }

    int minimumTotal(vector<vector<int>>& t) {
        int n = t.size();
        vector<vector<int>> dp(n, vector<int> (n, -1));
        return func(0, 0, t, dp, n);
    }
};

------------------------------------------------------------------------------------------

int minimumTotal(vector<vector<int>>& t) {
        int n = t.size();
        vector<vector<int>> dp(n, vector<int> (n, INT_MAX));
        // return func(0, 0, t, dp, n);
        for(int i = 0; i < n; i++){
            dp[n - 1][i] = t[n - 1][i];
        }
        for(int i = n - 2; i >= 0; i--){
            for(int j = 0; j < i + 1; j++){
                dp[i][j] = min(dp[i][j], dp[i + 1][j] + t[i][j]);
                dp[i][j] = min(dp[i][j], dp[i + 1][j + 1] + t[i][j]);
            }
        }
        return dp[0][0];
    }
    
------------------------------------------------------------------------------------------

int minimumTotal(vector<vector<int>>& t) {
        int n = t.size();
        vector<int> next(n, 0);
        for(int i = 0; i < n; i++){
            next[i] = t[n - 1][i];
        }
        for(int i = n - 2; i >= 0; i--){
            vector<int> temp(n, INT_MAX);
            for(int j = 0; j < i + 1; j++){
                temp[j] = min(temp[j], next[j] + t[i][j]);
                temp[j] = min(temp[j], next[j + 1] + t[i][j]);
            }
            next = temp;
        }
        return next[0];
    }
