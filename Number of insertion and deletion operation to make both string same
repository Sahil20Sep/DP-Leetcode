int func(int i, int j, string &s, string &t, vector<vector<int>> &dp){
        if(i < 0 || j < 0){
            return 0;
        }
        if(dp[i][j] != -1){
            return dp[i][j];
        }
        if(s[i] == t[j]){
            return dp[i][j] = 1 + func(i - 1, j - 1, s, t, dp);
        }else{
            return dp[i][j] = max(func(i - 1, j, s, t, dp), func(i, j - 1, s, t, dp));
        }
    }
	
	int minOperations(string s, string t) 
	{ 
	    int n = s.size(), m = t.size();
	    vector<vector<int>> dp(n, vector<int> (m, -1));
	    return n + m - 2 * func(n - 1, m - 1, s, t, dp);
	}
