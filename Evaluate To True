#include <bits/stdc++.h> 

const int mod = 1e9 + 7;

long long func(int i, int j, int flag, string &s, vector<vector<vector<int>>> &dp){
    if(i > j){
        return 0;
    }
    if(i == j){
        if(flag){
            return (s[i] == 'T');
        }else{
            return (s[i] == 'F');
        }
    }
    if(dp[i][j][flag] != -1){
        return dp[i][j][flag];
    }
    long long ans = 0;
    for(int k = i + 1; k <= j - 1; k += 2){
        long long lt = func(i, k - 1, 1, s, dp) % mod;
        long long lf = func(i, k - 1, 0, s, dp) % mod;
        long long rt = func(k + 1, j, 1, s, dp) % mod;
        long long rf = func(k + 1, j, 0, s, dp) % mod;
        if(s[k] == '&'){
            if(flag){
                ans = (ans + (lt * rt) % mod) % mod;
            }else{
                ans = (ans + (lt * rf) % mod + (lf * rt) % mod + (lf * rf) % mod) % mod;
            }
        }
        else if(s[k] == '|'){
            if(flag){
                ans = (ans + (lt * rt) % mod + (lt * rf) % mod + (lf * rt) % mod) % mod;
            }else{
                ans = (ans + (lf * rf) % mod) % mod;
            }
        }else{
            if(flag){
                ans = (ans + (lt * rf) % mod + (lf * rt) % mod) % mod;
            }else{
                ans = (ans + (lt * rt) % mod + (lf * rf) % mod) % mod;
            }
        }
    }
    return dp[i][j][flag] = ans;
}

int evaluateExp(string &s) {
    int n = s.size();
    vector<vector<vector<int>>> dp(n, vector<vector<int>> (n, vector<int> (2, -1)));
    return func(0, n - 1, 1, s, dp);
}
