class Solution {
public:

    int func(int i, string &s, vector<int> &dp){
        if(i < 0){
            return 1;
        }
        if(dp[i] != -1){
            return dp[i];
        }
        int ans = 0;
        int a = s[i] - '0';
        if(a >= 1 && a <= 9){
            ans += func(i - 1, s, dp);
        }
        if(i - 1 >= 0){
            int b = (s[i - 1] - '0') * 10 + (s[i] - '0');
            if(b >= 10 && b <= 26){
                ans += func(i - 2, s, dp);
            }
        }
        return dp[i] = ans;
    }

    int numDecodings(string s) {
        int n = s.size();
        vector<int> dp(n, -1);
        return func(n - 1, s, dp);
    }
};

-----------------------------------------------------------------------

int numDecodings(string s) {
        int n = s.size();
        vector<int> dp(n + 1, 0);
        // return func(n - 1, s, dp);
        dp[0] = 1;
        for(int i = 1; i <= n; i++){
            int ans = 0;
            int a = s[i - 1] - '0';
            if(a >= 1 && a <= 9){
                ans += dp[i - 1];
            }
            if(i - 2 >= 0){
                int b = (s[i - 2] - '0') * 10 + (s[i - 1] - '0');
                if(b >= 10 && b <= 26){
                    ans += dp[i - 2];
                }
            }
            dp[i] = ans;
        }
        return dp[n];
    }
    
 ---------------------------------------------------------------------------
 
 class Solution {
public:

    int const mod = 1e9 + 7;


    long long func(int i, string &s, vector<int> &dp){
        if(i < 0){
            return 1;
        }
        if(dp[i] != -1){
            return dp[i];
        }
        long long ans = 0;
        if(s[i] == '*'){
            ans = (ans + (func(i - 1, s, dp) * 9LL) % mod) % mod;
        }
        int a = s[i] - '0';
        if(a >= 1 && a <= 9){
            ans = (ans + func(i - 1, s, dp)) % mod;
        }
        if(i - 1 >= 0){
            if(s[i - 1] == '*'){
                if(s[i] == '*'){
                    ans = (ans + (func(i - 2, s, dp) * 15LL) % mod) % mod;
                }else{
                    int c = s[i] - '0';
                    if(c >= 0 && c <= 6){
                    ans = (ans + (func(i - 2, s, dp) * 2LL) % mod) % mod;
                    }
                    if(c >= 7){
                        ans = (ans + (func(i - 2, s, dp) * 1LL) % mod) % mod;
                    }
                }
            }else{
                if(s[i] == '*'){
                    int b = s[i - 1] - '0';
                    if(b == 1){
                        ans = (ans + (func(i - 2, s, dp) * 9LL) % mod) % mod;
                    }
                    if(b == 2){
                        ans = (ans + (func(i - 2, s, dp) * 6LL) % mod) % mod;
                    }
                }else{
                    int b = (s[i - 1] - '0') * 10 + (s[i] - '0');
                    if(b >= 10 && b <= 26){
                        ans = (ans + func(i - 2, s, dp) * 1LL) % mod;
                    }
                }
            }
        }
        return dp[i] = ans;
    }

    int numDecodings(string s) {
        int n = s.size();
        vector<int> dp(n, -1);
        return func(n - 1, s, dp);
    }
};
