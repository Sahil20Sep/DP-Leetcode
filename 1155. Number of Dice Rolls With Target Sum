class Solution {
public:

    const int mod = 1e9 + 7;

    int func(int i, int k, int target, vector<vector<int>> &dp){
        if(target == 0 && i < 0){
            return 1;
        }
        if(i < 0 || target == 0){
            return 0;
        }
        if(dp[i][target] != -1){
            return dp[i][target];
        }
        int ans = 0;
        for(int j = 1; j <= k; j++){
            if(target - j >= 0){
                ans = (ans + func(i - 1, k, target - j, dp)) % mod;
            }
        }
        return dp[i][target] = ans;
    }

    int numRollsToTarget(int n, int k, int target) {
        vector<vector<int>> dp(n, vector<int> (target + 1, -1));
        return func(n - 1, k, target, dp);
    }
};
