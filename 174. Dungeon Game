class Solution {
public:

    int func(int i, int j, vector<vector<int>> &v, vector<vector<int>> &dp){
        int n = v.size(), m = v[0].size();
        if(i == n - 1 && j == m - 1){
            return max(0, -v[i][j]);
        }
        if(dp[i][j] != -1){
            return dp[i][j];
        }
        int ans = INT_MAX;
        if(i + 1 < n){
            ans = min(ans, func(i + 1, j, v, dp) - v[i][j]);
        }
        if(j + 1 < m){
            ans = min(ans, func(i, j + 1, v, dp) - v[i][j]);
        }
        return dp[i][j] = max(0, ans);
    }

    int calculateMinimumHP(vector<vector<int>>& v) {
        int n = v.size(), m = v[0].size();
        vector<vector<int>> dp(n, vector<int> (m, -1));
        return func(0, 0, v, dp) + 1;
    }
};
