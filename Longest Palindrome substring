class Solution {
public:

    bool func(int i, int j, string &s){
        while(i < j){
            if(s[i] != s[j]){
                return false;
            }
            i++; j--;
        }
        return true;
    }

    string longestPalindrome(string s) {
        int mx = 0;
        int idx = -1;
        int n = s.size();
        for(int i = 0; i < n; i++){
            for(int j = i; j < n; j++){
                if(func(i, j, s)){
                    if(j - i + 1 > mx){
                        mx = j - i + 1;
                        idx = i;
                    }
                }
            }
        }
        return s.substr(idx, mx);
    }
};

--------------------------------------------------------------------

string longestPalindrome(string s) {
        int n = s.size();
        vector<vector<bool>> dp(n, vector<bool> (n, 0));
        int mx = 1, start = 0;
        for(int i = 0; i < n; i++){
            dp[i][i] = true;
        }
        for(int i = n - 1; i >= 0; i--){
            for(int j = i + 1; j < n; j++){
                if(s[i] == s[j]){
                    if(j - i == 1 || dp[i + 1][j - 1]){
                        dp[i][j] = true;
                        if(j - i + 1 > mx){
                            mx = j - i + 1;
                            start = i;
                        }
                    }
                }
            }
        }
        return s.substr(start, mx);
    }

-----------------------------------------------------------------------

int countSubstrings(string s) {
        int n = s.size();
        vector<vector<bool>> dp(n, vector<bool> (n, 0));
        for(int i = 0; i < n; i++){
            dp[i][i] = true;
        }
        for(int i = n - 1; i >= 0; i--){
            for(int j = i + 1; j < n; j++){
                if(s[i] == s[j]){
                    if(j - i == 1 || dp[i + 1][j - 1]){
                        dp[i][j] = true;
                    }
                }
            }
        }
        int ans = 0;
        for(auto i : dp){
            for(auto j : i){
                if(j){
                    ans++;
                }
            }
        }
        return ans;
    }
